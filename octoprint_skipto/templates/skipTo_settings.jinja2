<!-- templates/settings_skipTo.jinja2 -->
<div id="settings_plugin_skipTo" class="settingssection">
    <h3>SkipTo Settings</h3>
    <div class="alert alert-info" role="alert">
        {{ _('<h4>Instructions:</h4>
        <p>Choose the type of file that will be created:</p>
        <ul>
            <li>If you select <strong>Temp File</strong>, only one file will be made and it will be named <code>temp_filename.gcode</code> and the print will start immediately. This helps to avoid flooding the system with multiple temporary files.</li>
            <li>If you do not check this option, the selected file will be processed and saved with the format <code>originalname+appendstring.gcode</code>. If you use tokens like <code>{mode}</code> and/or <code>{value}</code> in the append string, these values will be inserted into the string accordingly. The file will then be saved and loaded for printing.</li>
        </ul>
        <p><strong>Note:</strong> If your G-code file uses relative positioning (G91), the skip functionality may not work as expected. Relative positioning means that movements are relative to the current toolhead position, so setting an offset based on a fixed coordinate (such as layer number or Z-height) might not align with the actual print setup. Ensure that your G-code uses absolute positioning (G90) for consistent behavior with the skip functionality.</p>
        <p>Additional Options:</p>
        <ul>
            <li><strong>Z Offset:</strong> Enter the Z offset value to adjust the height of the print head relative to the initial first layer. The default value is 5.0mm.</li>
            <li><strong>Ignore All Initialization Movement:</strong> This setting will force skipping of all movement (including extruder) before layer 1. Printers or pre-config may use this to prime the extruder or check the level of the bed by extruding along it in some way. This is enabled by default.</li>
        </ul>
        ')|safe }}

    </div>
    <form class="form-horizontal" onsubmit="return false;"> 
        <div class="control-group ">
            <!-- Toggle Switch for 'Use Same Temp File' -->
            <label class="control-label" for="use_tempfile">
                {{ _('Use Temp File') }}
                <i class="fa fa-info-circle" data-toggle="tooltip" title="{{ _('Check this to use the same temporary file for processing. (stops lots of files being added if you use this a lot) If unchecked then the Appending File String will be added to the filename') }}"></i>
            </label>
            <div class="controls ">
                <label class="switch">
                    <input type="checkbox" id="use_tempfile" data-bind="checked: settings.plugins.SkipTo.use_tempfile">
                </label>
            </div>
        </div>
        
        <!-- Temp File Name -->
        <div class="control-group toggle-dependent" data-depends-on="#use_tempfile" data-depends-value="true">
            <label class="control-label" for="temp_filename" >
                {{ _('Temp File Name') }}
                <i class="fa fa-info-circle" data-toggle="tooltip" title="{{ _('Enter the name of the temporary file to be used for processing. (if you check the above checkbox)') }}"></i>
            </label>
            <div class="controls">
                <input type="text" id="temp_filename" class="form-control" data-bind="value: settings.plugins.SkipTo.temp_filename">
            </div>
        </div>
    
        <!-- Appending File String -->
        <div class="control-group toggle-dependent" data-depends-on="#use_tempfile" data-depends-value="false">
            <label class="control-label" for="appending_string">
                {{ _('Appending String') }}
                <i class="fa fa-info-circle" data-toggle="tooltip" title="{{ _('Specify the string to append to the file name for processed files. (if you don\'t check the box then it will create your file plus this string to the filename - you can use tags \"{mode}\" and \"{value}\") in that string') | e }}"></i>

                </label>
            <div class="controls">
                <input type="text" id="appending_string" class="form-control" data-bind="value: settings.plugins.SkipTo.appending_string">
            </div>
        </div>
        
        <!-- Z Offset -->
        <div class="control-group">
            <label class="control-label" for="z_offset">
                {{ _('Z Offset') }}
                <i class="fa fa-info-circle" data-toggle="tooltip" title="{{ _('Enter the Z offset value to adjust the height of the print head relative to the initial first layer - default is 5.0mm.') }}"></i>
            </label>
            <div class="controls">
                <input type="number" id="z_offset" class="form-control" step="0.1" data-bind="value: settings.plugins.SkipTo.z_offset">
            </div>
        </div>
        

        <!-- Ignore all movement before Layer 1 -->
        <div class="control-group">
            <label class="control-label" for="ignore_init_movement">
                {{ _('Ignore all initialisation movement') }}
                <i class="fa fa-info-circle" data-toggle="tooltip" title="{{ _('This setting will force skipping of all movement (including extruder) before layer 1. Printers or pre-config may use this to prime the extruder or check the level of the bed by extruding along it in some way. This is enabled by default.') }}"></i>
            </label>
            <div class="controls">
                <input type="checkbox" id="ignore_init_movement" class="form-control" data-bind="checked: settings.plugins.SkipTo.ignore_init_movement" />
            </div>
        </div>

        


    </form>
</div>


<style>
    /* Custom Styles for Fields */
 .control-group{
 padding:10px;
 }

  .highlight {
        border: 1px solid #ddd;
        margin-top: 10px;
        border-radius: 4px;
        background-color: #b9d9ff;
    }

</style>


<script>
 document.addEventListener('DOMContentLoaded', function() {
    
        // Toggle dependent fields visibility
        function toggleFields() {
            var dependentFields = document.querySelectorAll('.toggle-dependent');
            dependentFields.forEach(function(field) {
                var dependsOnSelector = field.getAttribute('data-depends-on');
                var dependsValue = field.getAttribute('data-depends-value') === 'true';

                var dependsOnElement = document.querySelector(dependsOnSelector);
                var isDependsOnChecked = dependsOnElement.checked;

                if (isDependsOnChecked === dependsValue) {
                    field.classList.add('highlight');
                } else {
                    field.classList.remove('highlight');
                }
            });
        };



        // Update visibility on toggle change
       document.getElementById('use_tempfile').addEventListener('change', toggleFields);

        setTimeout(function() {
            toggleFields();
        }, 2000);
    });
</script>
